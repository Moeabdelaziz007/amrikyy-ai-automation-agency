# Environment Configuration for Production Security
# Copy this file to .env.local and fill in your actual values

# =============================================================================
# JWT CONFIGURATION
# =============================================================================
# Generate strong secrets: openssl rand -base64 32
JWT_SECRET=your-super-secret-jwt-key-change-in-production
JWT_REFRESH_SECRET=your-super-secret-refresh-key-change-in-production
JWT_ACCESS_TTL=900
JWT_REFRESH_TTL=604800

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================
# PostgreSQL connection for token revocation and audit logs
DATABASE_URL=postgresql://username:password@localhost:5432/axon_security
DATABASE_HOST=localhost
DATABASE_PORT=5432
DATABASE_NAME=axon_security
DATABASE_USER=axon_user
DATABASE_PASSWORD=your-database-password

# =============================================================================
# 2FA CONFIGURATION
# =============================================================================
# Generate strong secrets: openssl rand -base64 32
TOTP_SECRET=your-totp-encryption-secret-change-in-production
BACKUP_CODES_SALT=your-backup-codes-salt-change-in-production

# =============================================================================
# SSO PROVIDERS
# =============================================================================
# Google OAuth
GOOGLE_CLIENT_ID=your-google-client-id
GOOGLE_CLIENT_SECRET=your-google-client-secret

# Microsoft Azure AD
MICROSOFT_CLIENT_ID=your-microsoft-client-id
MICROSOFT_CLIENT_SECRET=your-microsoft-client-secret
MICROSOFT_TENANT_ID=your-microsoft-tenant-id

# Keycloak
KEYCLOAK_URL=https://your-keycloak-instance.com
KEYCLOAK_REALM=axon-realm
KEYCLOAK_CLIENT_ID=axon-client
KEYCLOAK_CLIENT_SECRET=your-keycloak-client-secret

# Auth0
AUTH0_DOMAIN=your-auth0-domain.auth0.com
AUTH0_CLIENT_ID=your-auth0-client-id
AUTH0_CLIENT_SECRET=your-auth0-client-secret

# =============================================================================
# AUDIT LOGGING
# =============================================================================
# ELK Stack Configuration
ELK_ENABLED=true
ELK_ENDPOINT=https://your-elasticsearch-instance.com:9200
ELK_INDEX=axon-audit-logs
ELK_USERNAME=elastic
ELK_PASSWORD=your-elasticsearch-password
ELK_API_KEY=your-elasticsearch-api-key

# BigQuery Configuration
BIGQUERY_ENABLED=true
BIGQUERY_PROJECT_ID=your-gcp-project-id
BIGQUERY_DATASET=audit_logs
BIGQUERY_TABLE=events
BIGQUERY_CREDENTIALS=path/to/service-account-key.json

# File Logging
FILE_LOGGING_ENABLED=true
AUDIT_LOG_FILE_PATH=/var/log/axon/audit-logs.json

# =============================================================================
# SECURITY HEADERS & CSP
# =============================================================================
# Content Security Policy
CSP_REPORT_URI=https://your-domain.com/csp-report
CSP_REPORT_ONLY=false

# HSTS Configuration
HSTS_MAX_AGE=31536000
HSTS_INCLUDE_SUBDOMAINS=true
HSTS_PRELOAD=true

# =============================================================================
# RATE LIMITING
# =============================================================================
# Redis for rate limiting (optional)
REDIS_URL=redis://localhost:6379
REDIS_PASSWORD=your-redis-password

# Rate limiting configuration
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=100
RATE_LIMIT_SKIP_SUCCESSFUL_REQUESTS=false

# =============================================================================
# CRON JOBS SECURITY
# =============================================================================
# Secret for cron job authentication
CRON_SECRET=your-cron-secret-change-in-production

# =============================================================================
# MONITORING & ALERTING
# =============================================================================
# Sentry for error tracking
SENTRY_DSN=https://your-sentry-dsn@sentry.io/project-id

# Slack webhook for security alerts
SLACK_WEBHOOK_URL=https://hooks.slack.com/services/your/slack/webhook

# Email configuration for security alerts
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USER=your-email@gmail.com
SMTP_PASSWORD=your-app-password
SECURITY_ALERT_EMAIL=security@your-domain.com

# =============================================================================
# APPLICATION CONFIGURATION
# =============================================================================
# App URLs
NEXT_PUBLIC_APP_URL=https://your-domain.com
NEXT_PUBLIC_PY_BACKEND_URL=https://your-backend-domain.com

# Supabase Configuration
NEXT_PUBLIC_SUPABASE_URL=https://your-project.supabase.co
NEXT_PUBLIC_SUPABASE_ANON_KEY=your-supabase-anon-key
SUPABASE_SERVICE_ROLE_KEY=your-supabase-service-role-key

# AI Services
GEMINI_API_KEY=your-gemini-api-key
SERPAPI_KEY=your-serpapi-key

# =============================================================================
# DEVELOPMENT OVERRIDES
# =============================================================================
# Only for development - disable in production
NODE_ENV=development
SKIP_ENV_VALIDATION=false

# Development database (separate from production)
DEV_DATABASE_URL=postgresql://dev_user:dev_password@localhost:5432/axon_dev

# =============================================================================
# SECURITY CHECKLIST
# =============================================================================
# Before deploying to production, ensure:
# 1. All secrets are changed from default values
# 2. Database connections use SSL
# 3. All external services use HTTPS
# 4. Rate limiting is properly configured
# 5. Audit logging is enabled and working
# 6. 2FA is enforced for admin users
# 7. Token revocation is working
# 8. Security headers are properly set
# 9. CSP is configured and tested
# 10. Monitoring and alerting are set up